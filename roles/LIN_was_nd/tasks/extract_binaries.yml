---
- name: Check if IIM repository present
  stat:
    path: "{{ iim_repo }}/installc"
  register: installc

- name: Extract IIM binaries
  unarchive:
    src: '{{ was_src }}/{{ iim_src_file }}'
    dest: "{{iim_repo}}"
    copy: no
  when: installc.stat.exists == False

- name: Check if WAS repository present
  stat:
    path: "{{ was_repo }}/repository.config"
  register: repocon

- name: Extract WAS binaries
  unarchive:
    src: "{{ was_src }}/{{ was_src_file }}"
    dest: "{{was_repo}}"
    copy: no
  when: repocon.stat.exists == False
##
- name: Check if SDK repository exists
  stat:
    path: "{{ sdk_repo }}/repository.config"
  register: sdk_dir
##
- name: Extract Java Jdk
  unarchive:
    src: "{{ was_src }}/{{ sdk_src_file }}"
    dest: "{{sdk_repo}}"
    copy: no
  when: sdk_dir.stat.exists == False
###
- name: Check if WAS FP repository is present
  stat:
    path: "{{ was_repo_fp }}/repository.config"
  register: was_fp_dir

- name: Extract WAS Fixpack binaries
  unarchive:
    src: '{{ was_src }}/{{ was_src_file_fp }}'
    dest: "{{ was_repo_fp }}"
    copy: no
  when: was_fp_dir.stat.exists == False
###
- name: Check if WAS RP repository is present
  stat:
    path: "{{ was_repo_rp }}/repository.config"
  register: was_rp_dir

- name: Extract WAS Refreshpack binaries
  unarchive:
    src: '{{ was_src }}/{{ was_src_file_rp }}'
    dest: "{{ was_repo_rp }}"
    copy: no
  when: was_rp_dir.stat.exists == False
